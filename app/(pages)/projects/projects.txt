42SH





AREA


PORTFOLIO




RAYTRACER





WOLFRAM

			<div className={"w-full h-full flex items-center flex-col justify-center"}>
				<div className={"w-full text-start flex opacity-100 -inset-y-0 p-32"}>
					<div className={"w-2/3"}>
						Wolfram is one of my 2 favorite projects at EPITECH.
						We had to code it in Haskell.
					</div>
					<div className={"w-auto"}>
					</div>
				</div>
				<div className={"w-full flex justify-end items-center p-32"}>
					<div className={"w-2/3 text-end "}>
						The goal is to accurately render Wolfram's Elementary Cellular Automata.
						<br/><br/>
					</div>
				</div>
			</div>,
			<div className={"w-full flex justify-end items-center p-32"}>
				<div className={" text-center "}>
					A complicated name for a wonderful mathematical experience.
					<br/>we're gonna call it<br/><br/> WECA
					<br/><br/>
				</div>
			</div>,

			<div className={"w-full h-auto flex items-center justify-center"}>
				<img alt={"42sh"} src={"/images/projects/wolfram.png"} className={"object-cover"}/>
			</div>,
			<div className={"w-full flex flex-col justify-start items-start"}>
				<div className={"p-48 text-end w-full"}>
					WECA is actually really simple and to explain it i'm gonna first explain what the Game Of
					Life is.
				</div>

				<div className={"p-32 text-start w-2/3"}>
					The Game of life is a white grid, where every cell can be either alive (white) or <i>dead</i> (black).
				</div>
			</div>,

			<div className={"w-3/4 p-32 text-center "}>
				The state of a cell is determined by its neighbors and by the Rules we use. <br/><br/>
				After the determination is done, we can render the next generation of cells.
			</div>,

			<div className={"w-full justify-center flex items-center flex-col"}>
				<div>Like this: <br/></div>
				<img src={"/images/projects/gameoflife.gif"} alt={"gameoflife"} className={"w-2/3 h-full p-32 object-cover"}/>
			</div>,

			<div className={"w-full text-end p-32"}>
				Well, WECA is the same but with 	1 Dimension instead of 2.<br/>
				And we display the next generation below the previous one.<br/><br/>
				<div className={"p-48 text-start w-3/4"}>
					Check out this <a
						href={"https://mathworld.wolfram.com/ElementaryCellularAutomaton.html"}>
						<span className={`text-blue-300 ${ImportantFont.className}`}>course</span>
					</a> if you want to know more about it.
				</div>
			</div>,

			<div className={"w-full flex items-center justify-center gap-x-20 p-32"}>
				<img alt={"42sh"} src={"/images/projects/rule90.png"} className={"w-2/3 object-cover"}/>
				<div className={"w-1/3 text-end"}>
					For instance, here is the Rule 90
				</div>
			</div>,

			<div className={"w-full flex justify-center"}>
				<div className={"w-2/3 h-full text-center p-32"}>
					There is 256 of them, try them out !
					Here is the project <a
					href={"https://github.com/G1anC/Haskell-Projects"}>
					<span className={`text-blue-300 ${ImportantFont.className}`}>link</span>.
					<br/><br/>Check it out :)
				</a>
				</div>
			</div>



ZAPPY

			<div className={"txt w-full text-center p-60"}>
				<div className={"txt"}>Zappy is my second year final project at EPITECH.</div>
			</div>,
			<div className={"w-full flex items-center justify-center"}>
				<div className={"w-1/3"}></div>
				<div className={"txt w-2/3 text-end p-32"}>
					<div className={"txt"}>The goal is to create a</div>
					<div className={"txt"}>0 player game</div>
					<div className={"txt"}>with 3 different parts.</div>
				</div>
			</div>,
			<div className={"txt w-3/4 text-start"}>
				<div className={"txt"}>the gui made in C++,</div>
				<div className={"txt"}>the Server made in C</div>
				<div className={"txt"}>and the IA made in Rust</div>
			</div>,
			<div className={"txt w-3/4 text-start"}>
				<div className={"txt"}>The project's goal is</div>
				<div className={"txt"}>to create families of monsters</div>
				<div className={"txt"}>that can evolve and procreate using ressources.</div>
			</div>,

			<div className={"txt w-full h-full text-center"}><div className={"txt"}>My job was making a cool GUI using RAYLIB</div>
				<div className={"txt"}>So i decided to make it a chess game</div>
				<div className={"txt"}>When the monsters evolve </div>
				<div className={"txt"}>they become a better piece.</div>
			</div>,

			<div className={"w-full flex flex-col justify-end items-end"}>
				<div className={"txt w-2/3 text-end p-32"}>
					<div className={"txt"}>marketing it as an auto</div>
					<div className={"txt"}>chess player with AI that </div>
				<div className={"txt"}>battle each others.</div>
				</div>
				<div className={"txt w-full text-start p-32"}>
					<div className={"txt"}>Check out the repository to gain more</div>
					<div className={"txt"}>insight on the project.</div>
				</div>
			</div>,